//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.05.17 at 01:58:06 PM EDT 
//


package com.ztfd.crestronFusion.api.entities;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for API_Enum_CustomFieldType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="API_Enum_CustomFieldType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="StringType"/>
 *     &lt;enumeration value="IntegerType"/>
 *     &lt;enumeration value="BooleanType"/>
 *     &lt;enumeration value="DateTimeType"/>
 *     &lt;enumeration value="TextType"/>
 *     &lt;enumeration value="URLType"/>
 *     &lt;enumeration value="None"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "API_Enum_CustomFieldType")
@XmlEnum
public enum APIEnumCustomFieldType {

    @XmlEnumValue("StringType")
    STRING_TYPE("StringType"),
    @XmlEnumValue("IntegerType")
    INTEGER_TYPE("IntegerType"),
    @XmlEnumValue("BooleanType")
    BOOLEAN_TYPE("BooleanType"),
    @XmlEnumValue("DateTimeType")
    DATE_TIME_TYPE("DateTimeType"),
    @XmlEnumValue("TextType")
    TEXT_TYPE("TextType"),
    @XmlEnumValue("URLType")
    URL_TYPE("URLType"),
    @XmlEnumValue("None")
    NONE("None");
    private final String value;

    APIEnumCustomFieldType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static APIEnumCustomFieldType fromValue(String v) {
        for (APIEnumCustomFieldType c: APIEnumCustomFieldType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
